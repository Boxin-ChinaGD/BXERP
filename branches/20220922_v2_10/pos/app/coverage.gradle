//代码覆盖率插件
apply plugin: 'jacoco'

android {
// 目前已经不支持通过jacoco{}指定版本了，如果加入这块代码，运行不会出错，但是会有
// warning提示
//    jacoco{
//        version "0.7.6.201602180812"
//    }

    // 项目较小的情况下不需要dexOptions的配置，只有项目方法数超过64K的限制时或者
    // 项目本身接近64K上限但还未超过，加了Junit代码后就超过时（我们项目就属于这种
    // 情况），需要对项目做multidex支持，实现方法很简单，请自行调查。
    // Enable multidex后可能会遇到java.lang.OutOfMemoryError: GC overhead limit exceeded问题,需要此项配置来解决
    dexOptions {
        javaMaxHeapSize "4g"
    }

    buildTypes {
        debug{
            testCoverageEnabled true
        }
    }
}

//jacocoTestReport依赖于connectedAndroidTest task，所以在执行jacoco之前需要先执行connectedAndroidTest，也就是说需要连接测试机（模拟器or真机）
task jacocoAndroidTestReport(type:JacocoReport,dependsOn:"connectedAndroidTest"){
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    reports{
        xml.enabled false
        html.enabled true
        csv.enabled false
    }
    classDirectories = fileTree(
            dir : "$buildDir/intermediates/classes/debug",
            excludes : [
                    '**/*Test.class',
                    '**/R.class',
                    '**/R$*.class',
                    '**/BuildConfig.*',
                    '**/Manifest*.*'
            ]
    )
    def coverageSourceDirs = ['src']
    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    additionalClassDirs = files(coverageSourceDirs)
    executionData = files("$buildDir/outputs/androidTest-code-coverage/connected/coverage.ec")
}

//jacocoTestReport依赖于test task，所以在执行jacoco之前需要先执行test
task jacocoTestReport(type:JacocoReport,dependsOn:"test"){
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    reports{
        xml.enabled false
        html.enabled true
        csv.enabled false
    }
    classDirectories = fileTree(
            dir : "$buildDir/intermediates/classes/debug",
            excludes : [
                    '**/*Test.class',
                    '**/R.class',
                    '**/R$*.class',
                    '**/BuildConfig.*',
                    '**/Manifest*.*'
            ]
    )
    def coverageSourceDirs = ['src']
    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    additionalClassDirs = files(coverageSourceDirs)
    executionData = files("$buildDir/outputs/test-code-coverage/coverage.ec")
}
